// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Event {
  id          String   @id @default(uuid())
  name        String
  description String
  date        DateTime
  price       Float
  location    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Spot        Spot[]
}

model Spot {
  id        String     @id @default(uuid())
  eventId   String
  name      String
  status    SpotStatus
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Event     Event      @relation(fields: [eventId], references: [id])
  Ticket               Ticket?
  ReservationHistory   ReservationHistory[]
}

enum SpotStatus {
  AVAILABLE
  OCCUPIED
  DISABLED // not occupied but not available for some reason like mantainance
}

model Ticket {
  id         String     @id @default(uuid())
  email      String
  ticketKind TicketKind
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now())
  spotId     String
  Spot       Spot       @relation(fields: [spotId], references: [id])

  @@unique([spotId])
}

enum TicketKind {
  FULL
  HALF
}

enum TicketStatus {
  RESERVED
  CANCELED
}

model ReservationHistory {
  id         String       @id @default(uuid())
  email      String
  ticketKind TicketKind
  status     TicketStatus
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @default(now())
  spotId     String
  Spot       Spot         @relation(fields: [spotId], references: [id])
}
